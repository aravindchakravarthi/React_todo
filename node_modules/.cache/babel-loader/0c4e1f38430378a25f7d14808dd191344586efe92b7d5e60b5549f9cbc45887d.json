{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\todo-list\\\\src\\\\Content.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { FaTrashCan } from \"react-icons/fa6\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = ({\n  items,\n  handleDelete,\n  handleCheck\n}) => {\n  _s();\n  const [checkvalue, setCheckValue] = useState(0);\n  const checkValue = () => {\n    let count = 0;\n    items.map(item => {\n      return item.checked === true && (count += 1);\n    });\n    setCheckValue(count);\n  };\n  checkValue();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [items.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jcsb\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => handleCheck(item.id),\n                checked: item.checked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                style: item.checked ? {\n                  textDecoration: \"line-through\"\n                } : null,\n                onClick: () => handleCheck(item.id),\n                children: item.item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(FaTrashCan, {\n                role: \"button\",\n                onClick: () => handleDelete(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '100px'\n      },\n      children: \"Your List is Empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), \"checkvalue\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Content, \"MMCPfRhcB7nv5506r7X4DirDTsU=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["useState","FaTrashCan","jsxDEV","_jsxDEV","Content","items","handleDelete","handleCheck","_s","checkvalue","setCheckValue","checkValue","count","map","item","checked","children","length","className","type","onChange","id","fileName","_jsxFileName","lineNumber","columnNumber","style","textDecoration","onClick","role","marginTop","_c","$RefreshReg$"],"sources":["D:/react/todo-list/src/Content.js"],"sourcesContent":["\r\nimport { useState } from \"react\";\r\nimport { FaTrashCan } from \"react-icons/fa6\";\r\n\r\n\r\n\r\nconst Content = ({items, handleDelete, handleCheck}) => {\r\n\r\n    const [checkvalue, setCheckValue] = useState(0);\r\n\r\n    const checkValue = () =>{\r\n        let count = 0;\r\n        items.map((item) => {\r\n            return(\r\n                (item.checked === true ) && (count+=1 )\r\n            )\r\n        })\r\n        setCheckValue(count)\r\n    }\r\n    checkValue();\r\n    return (\r\n        <main>\r\n            {(items.length) ? (\r\n            <ul>\r\n                {items.map((item) => {\r\n                    return (\r\n                        <li className=\"item\" key={item.id} >\r\n                            <div className=\"jcsb\">\r\n                                <div>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        onChange={() => handleCheck(item.id)}\r\n                                        checked={item.checked}\r\n                                    />\r\n                                    <label \r\n                                        style={(item.checked) ? { textDecoration: \"line-through\" } : null }\r\n                                        onClick={() => handleCheck(item.id)}\r\n                                        \r\n                                    >\r\n                                        {item.item}\r\n                                    </label>\r\n                                </div>\r\n                                <div>\r\n                                    <FaTrashCan\r\n                                        role=\"button\"\r\n                                        onClick={()=> handleDelete(item.id)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                    );\r\n                })}\r\n            </ul>\r\n            ) : (\r\n                <p style={{marginTop:'100px'}}>Your List is Empty</p>\r\n            )}\r\n            \r\n            checkvalue \r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}